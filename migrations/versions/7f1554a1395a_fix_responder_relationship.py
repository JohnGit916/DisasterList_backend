"""Fix responder relationship

Revision ID: 7f1554a1395a
Revises: de11c83f910c
Create Date: 2025-06-28 21:32:48.336068

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7f1554a1395a'
down_revision = 'de11c83f910c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('responder_incidents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('note', sa.Text(), nullable=True))
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('unique_responder_incident'), type_='unique')
        batch_op.drop_column('timestamp')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('responder_incidents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint(batch_op.f('unique_responder_incident'), ['user_id', 'incident_id'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('note')

    # ### end Alembic commands ###
